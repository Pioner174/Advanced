<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>ID</th><th>Name</th><th>Dept</th><th>Location</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Person p in People ?? Enumerable.Empty<Person>())
        {
                <tr class="@GetClass(p?.Location?.City)">
                    <td>@p?.PersonId</td>
                    <td>@p?.Surname, @p?.FirstName</td>
                    <td>@p?.Department?.Name</td>
                    <td>@p?.Location?.City, @p?.Location?.Region</td>
                </tr>
        }
    </tbody>
</table>

<SelectFilter Values="@Cities" Title="@SelectTitle" @bind-SelectedValue="SelectedCity"/>

<button class="btn btn-primary mt-2" @onclick="@(()=> SelectedCity = "Oakland")">Change</button>
@*<div class="form-group">
    <label for="city">City</label>
    <select name="city" class="form-control" @bind="SelectedCity">
        <option disabled selected value="">Select City</option>
        @foreach (string city in Cities ?? Enumerable.Empty<string>())
        {
                <option value="@city" selected="@(city == SelectedCity)">
                @city
                </option>
        }
    </select>
</div>*@
@code {
    [Inject]
    public DataContext? Context { get; set; }

    public IEnumerable<Person>? People =>
        Context?.People.Include(p => p.Department).Include(p => p.Location);

    public IEnumerable<string>? Cities => Context?.Locations.Select(l => l.City).Take(ItemCount);

    public string SelectedCity { get; set; } = string.Empty;

    public string GetClass(string? city) =>
        SelectedCity == city ? "bg-info text-white" : "";

    [Parameter]
    public int ItemCount { get; set; } = 4;

    [Parameter]
    public string? SelectTitle { get; set; }

    //public void HandleCustom(string newValue)
    //{
    //    SelectedCity = newValue;
    //}

}